@using Majorsoft.Blazor.Components.Common.JsInterop.Scroll

@inject IJSRuntime jsRuntime
@inject IScrollHandler _scrollHandler
@implements IAsyncDisposable

@{
    RenderFragment<ScrollLinkData> link = (data) => @<li>
        <a @onclick="@((e) => _scrollHandler.ScrollToElementByIdAsync(@data.ScrollAnchorId))">@data.DisplayText</a>
    </li>;
}

<div class="navbar bg-base-100 sticky top-0 z-50 shadow-2xl transition-all ease-linear translate-y-0">
    <div class="navbar-start">
        <div class="dropdown">
            <label tabindex="0" class="btn btn-ghost md:hidden">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" />
                </svg>
            </label>
            <ul tabindex="0" class="menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52">
                @foreach (var linkData in _links)
                {
                    @link(linkData);
                }
            </ul>
        </div>
        <a href="#" class="btn btn-ghost normal-case text-xl">
            <img src="/images/logo.svg" alt="Stefan Milanovic Logo" class="h-full" />
        </a>
    </div>
    <div class="navbar-center hidden md:flex">
        <ul class="menu menu-horizontal p-0">
            @foreach (var linkData in _links)
            {
                @link(linkData);
            }
        </ul>
    </div>
    <div class="navbar-end">
        <a @onclick="onResumeClick" class="btn">Resume</a>
    </div>
</div>

@code {
    private List<ScrollLinkData> _links = new List<ScrollLinkData>
    {
        new ScrollLinkData("About", "about-me"),
        new ScrollLinkData("Experience", "experience"),
        // new ScrollLinkData("Work", "work"),
        new ScrollLinkData("Contact", "contact")
    };

    public async void onResumeClick()
    {
        await jsRuntime.InvokeAsync<object>("open", "/Milanovic-Stefan-Resume.pdf", "_blank");
    }

    public async ValueTask DisposeAsync()
    {
        if (_scrollHandler is not null)
        {
            await _scrollHandler.DisposeAsync();
        }
    }
}
